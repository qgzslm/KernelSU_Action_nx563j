# .github/workflows/build-kernel.yml
name: Build Kernel
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-22.04
    env:
      PYTHON_VERSION: 2.7
    steps:
    - uses: actions/checkout@v4

    - name: Setup Configuration
      run: |
        while IFS= read -r line; do
          if [[ $line == KERNEL_* || $line == USE_* || $line == *_IMAGE* ]]; then
            key="${line%%=*}"
            value="${line#*=}"
            echo "$key=$value" >> $GITHUB_ENV
          fi
        done < config.env

    - name: Setup build environment
      run: |
        # █████ 关键修复：彻底重建APT源配置 █████
        sudo rm -rf /etc/apt/sources.list.d/*
        sudo tee /etc/apt/sources.list << EOL
        deb https://mirrors.nju.edu.cn/ubuntu/ jammy main restricted universe multiverse
        deb https://mirrors.nju.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse
        deb https://mirrors.nju.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse
        deb https://mirrors.nju.edu.cn/ubuntu/ jammy-security main restricted universe multiverse
        EOL

        # █████ 修复架构名称拼写错误 █████
        sudo dpkg --add-architecture arm64
        sudo dpkg --add-architecture armhf
        sudo apt-get update -y
        sudo apt --fix-broken install -y

        # 安装Python环境
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y ppa:deadsnakes/ppa
        sudo apt-get update
        sudo apt-get install -y \
          python${PYTHON_VERSION} \
          python${PYTHON_VERSION}-dev \
          python-is-python3

        # █████ 修复图片中的依赖缺失问题 █████
        sudo apt-get install -y \
          crossbuild-essential-arm64 \
          crossbuild-essential-armhf \
          libssl-dev:arm64 \
          libssl-dev:armhf \
          libc6-dev-arm64-cross \
          libc6-dev-armhf-cross \
          binutils-aarch64-linux-gnu \
          binutils-arm-linux-gnueabihf \
          git ccache automake flex bison

        # 创建必要目录
        sudo ln -sf /usr/bin/python2.7 /usr/local/bin/python2
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    - name: Download toolchains
      timeout-minutes: 5
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        # █████ 改用清华大学镜像加速 █████
        wget https://mirrors.tuna.tsinghua.edu.cn/android/prebuilts/clang/host/linux-x86/clang-${{ env.CLANG_VERSION }}.tar.gz \
          -O clang.tar.gz
        mkdir clang-aosp && tar -xzf clang.tar.gz -C clang-aosp --strip-components 1
        
        wget https://mirrors.tuna.tsinghua.edu.cn/android/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/android-12.1.0_r27.tar.gz \
          -O gcc-aosp.tar.gz
        mkdir gcc-aosp && tar -xzf gcc-aosp.tar.gz -C gcc-aosp --strip-components 1

    - name: Build Kernel
      env:
        KBUILD_BUILD_USER: ${{ github.actor }}
        KBUILD_BUILD_HOST: GitHub-Actions
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --depth=1 --branch=${{ env.KERNEL_SOURCE_BRANCH }} ${{ env.KERNEL_SOURCE }} android-kernel
        
        if [ "${{ env.USE_KERNELSU }}" = "true" ]; then
          curl -sSL "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s -- android-kernel
        fi
        
        export PATH="$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$PATH"
        # █████ 修复armh64等架构错误 █████
        make -j$(nproc) -C android-kernel O=out \
          ARCH=arm64 \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-android- \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          ${{ env.BUILD_EXTRA_COMMAND }} \
          ${{ env.KERNEL_DEFCONFIG }}

        make -j$(nproc) -C android-kernel O=out \
          ARCH=arm64 \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-android- \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          ${{ env.BUILD_EXTRA_COMMAND }}

    - name: Package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ env.DEVICE }}-${{ github.run_id }}
        path: $GITHUB_WORKSPACE/kernel_workspace/android-kernel/out/arch/arm64/boot/*
