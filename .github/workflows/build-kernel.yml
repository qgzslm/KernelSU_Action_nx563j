# .github/workflows/build-kernel.yml
name: Build Kernel
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-22.04
    env:
      PYTHON_VERSION: 2.7
    steps:
    - uses: actions/checkout@v4

    - name: Setup Configuration
      run: |
        while IFS= read -r line; do
          if [[ $line == KERNEL_* || $line == USE_* ]]; then
            key="${line%%=*}"
            value="${line#*=}"
            echo "$key=$value" >> $GITHUB_ENV
          fi
        done < config.env

    - name: Setup build environment
      run: |
        # 强制更换APT源为国内镜像
        sudo sed -i 's#http://.*ubuntu.com#https://mirrors.ustc.edu.cn#g' /etc/apt/sources.list
        sudo sed -i 's#http://security.ubuntu.com#https://mirrors.ustc.edu.cn#g' /etc/apt/sources.list
        
        # 修复架构支持
        sudo dpkg --add-architecture arm64
        sudo dpkg --add-architecture armhf
        sudo apt-get update -y
        sudo apt --fix-broken install -y

        # 安装基础依赖
        sudo apt-get install -y \
          software-properties-common \
          python${PYTHON_VERSION} \
          python${PYTHON_VERSION}-dev \
          crossbuild-essential-arm64 \
          crossbuild-essential-armhf

        # 安装构建工具链
        sudo apt-get install -y \
          git ccache automake flex bison lzop \
          gcc-multilib g++-multilib zlib1g-dev \
          libssl-dev:arm64 libssl-dev:armhf

    - name: Download toolchains
      timeout-minutes: 5
      run: |
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
        cd $GITHUB_WORKSPACE/kernel_workspace
        
        # 使用清华镜像加速下载
        wget https://mirrors.tuna.tsinghua.edu.cn/android/prebuilts/clang/host/linux-x86/clang-${{ env.CLANG_VERSION }}.tar.gz \
          -O clang.tar.gz
        mkdir clang-aosp && tar -xzf clang.tar.gz -C clang-aosp --strip-components 1

    - name: Build Kernel
      env:
        KBUILD_BUILD_USER: ${{ github.actor }}
        KBUILD_BUILD_HOST: GitHub-Actions
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --depth=1 --branch=${{ env.KERNEL_SOURCE_BRANCH }} ${{ env.KERNEL_SOURCE }} android-kernel
        
        # 应用KernelSU补丁
        if [ "${{ env.USE_KERNELSU }}" = "true" ]; then
          curl -sSL "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s -- android-kernel
        fi
        
        # 配置编译环境
        export PATH="$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$PATH"
        
        make -j$(nproc) -C android-kernel O=out \
          ARCH=arm64 \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-android- \
          ${{ env.KERNEL_DEFCONFIG }}

        make -j$(nproc) -C android-kernel O=out \
          ARCH=arm64 \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-android-

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ env.DEVICE }}
        path: $GITHUB_WORKSPACE/kernel_workspace/android-kernel/out/arch/arm64/boot/
